{"version":3,"sources":["components/Home.js","api/api.js","components/Verify.js","components/SignIn.js","static/states_hash.js","components/SignUp.js","components/Navigator.js","components/Content.js","components/Header.js","components/Paperbase.js","components/PrivateRoute.js","components/PublicRoute.js","components/ForgotPassword.js","App.js","index.js","static/Logo.png"],"names":["Home","to","React","Component","api","axios","create","baseURL","timeout","Verify","props","state","verifyId","handleChange","bind","handleSubmit","event","preventDefault","name","target","value","this","setState","post","email","then","response","alert","data","message","onSuccess","catch","err","console","error","onError","Container","component","maxWidth","CssBaseline","className","src","Logo","alt","Typography","variant","id","color","onSubmit","TextField","margin","fullWidth","label","onChange","Button","type","Grid","container","item","onClick","resendId","SignIn","password","stage","showPassword","verificationError","successVerification","errorVerification","log","isVerified","prevState","messageColor","style","display","textAlign","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","handleClickShowPassword","xs","stateHashes","SignUp","success","firstName","prevFirstName","lastName","prevLastName","prevEmail","ValidatorForm","addValidationRule","length","toUpperCase","toLowerCase","test","Object","keys","includes","removeValidationRule","spacing","sm","autoComplete","validators","errorMessages","autoFocus","inputProps","maxLength","justify","ChangeToSignInPage","categories","children","icon","Navigator","active","get","window","location","reload","classes","other","Drawer","List","disablePadding","ListItem","clsx","firebase","itemCategory","textDecoration","itemActiveItem","button","changeActive","ListItemIcon","itemIcon","ListItemText","primary","itemPrimary","signOut","map","Fragment","key","categoryHeader","categoryHeaderPrimary","childId","Divider","divider","withStyles","theme","paddingTop","paddingBottom","palette","common","white","backgroundColor","boxShadow","fontSize","minWidth","marginRight","marginTop","paper","overflow","searchBar","borderBottom","searchInput","typography","block","addUser","contentWrapper","Paper","AppBar","elevation","Toolbar","alignItems","placeholder","disableUnderline","Tooltip","title","align","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","borderColor","onDrawerToggle","Hidden","smUp","Tabs","textColor","Tab","createMuiTheme","light","main","dark","h5","fontWeight","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","root","indicator","height","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","width","styles","drawer","flexShrink","app","flex","flexDirection","background","footer","Paperbase","handleDrawerToggle","mobileOpen","ThemeProvider","implementation","PaperProps","open","onClose","xsDown","PrivateRoute","isAuth","rest","render","PublicRoute","restricted","ForgotPassword","resetCode","newPassword","inputField","promptMessage","errorMessage","resendCode","App","loading","isAuthenticated","messageSignIn","messageSignInColor","errorMessageForgotPassword","stageForgotPassword","emailForgotPassword","signUpError","successSignIn","errorSignIn","successSignUp","errorSignUp","errorForgotPassword","successStageForgotPassword","nextStage","path","exact","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.130960d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h1>Home</h1>\r\n            <Link to='/signin'>SignIn</Link>\r\n            <Link to='/signup'>SignUp</Link>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios'\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: '/api/v1/',\r\n    timeout: 15000\r\n})\r\n\r\nexport default api","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n//Additional stylesheet\r\nimport \"../App.css\";\r\n\r\n//Logo image\r\nimport Logo from \"../static/Logo.png\";\r\n\r\n// import api\r\nimport api from \"../api/api.js\";\r\n\r\nclass Verify extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      verifyId: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    api\r\n      .post(\"/auth/verify\", {\r\n        email: this.props.email,\r\n        verifyId: this.state.verifyId,\r\n      })\r\n      .then((response) => {\r\n        alert(\r\n          response.data.message + \". Click OK to continue to your Dashboard.\"\r\n        );\r\n        this.props.onSuccess();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.props.onError(err.response.data.message);\r\n      });\r\n  }\r\n\r\n  resendId() {\r\n    api\r\n      .post(\"/auth/resend-verifyId\", {\r\n        email: this.props.email,\r\n      })\r\n      .then((response) => {\r\n        alert(response.data.message + ` to ${this.props.email}`);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        alert(\"An error occurred\");\r\n      });\r\n  }\r\n \r\n  render() { \r\n    const { verifyId } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div>\r\n              <img className=\"Logo\" src={Logo} alt=\"just4u logo\" />\r\n              <Typography component=\"h1\" variant=\"body1\" id=\"message\">\r\n                Please enter the verification ID sent to {this.props.email}\r\n              </Typography>\r\n              <p></p>\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"body2\"\r\n                id=\"error\"\r\n                color=\"error\"\r\n              >\r\n                {this.props.error}\r\n              </Typography>\r\n              <p></p>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"verifyId\"\r\n                  label=\"Verification ID\"\r\n                  name=\"verifyId\"\r\n                  value={verifyId}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <p></p>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <p></p>\r\n                <Grid container className=\"justify-content-md-center\">\r\n                  <Grid item>\r\n                    <Link to=\"/signin\" onClick={() => this.resendId()}>\r\n                      Resend verification ID\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Verify;\r\n","//material-ui components\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\n//Additional stylesheet\r\nimport \"../App.css\";\r\n\r\n// import Verify component\r\nimport Verify from \"./Verify\";\r\n\r\n//Logo image\r\nimport Logo from \"../static/Logo.png\";\r\n\r\n// import api\r\nimport api from \"../api/api.js\";\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      stage: \"signin\",\r\n      showPassword: false,\r\n      verificationError: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.successVerification = this.successVerification.bind(this);\r\n    this.errorVerification = this.errorVerification.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    api\r\n      .post(\"/auth/signin\", {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.message);\r\n        if (response.data.isVerified) {\r\n          this.props.onSuccess();\r\n        } else {\r\n          this.setState({ stage: \"verification\" });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.props.onError(err.response.data.message);\r\n      });\r\n  }\r\n\r\n  handleClickShowPassword() {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      showPassword: !prevState.showPassword,\r\n    }));\r\n  }\r\n\r\n  errorVerification(message) {\r\n    this.setState({ verificationError: message });\r\n  }\r\n\r\n  successVerification() {\r\n    this.props.onSuccess();\r\n  }\r\n\r\n  render() {\r\n    const { showPassword, email, password, verificationError, stage } = this.state;\r\n    const messageColor = this.props.messageColor;\r\n\r\n    if (stage === \"verification\") {\r\n      return (\r\n        <div>\r\n          <Verify email={email} error={verificationError} onError={this.errorVerification} onSuccess={this.successVerification}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div>\r\n              <img className=\"Logo\" src={Logo} alt=\"just4u logo\" />\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n                style={{\r\n                  display: \"block\",\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Sign In\r\n              </Typography>\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"body2\"\r\n                id=\"message\"\r\n                style={{\r\n                  color: messageColor,\r\n                }}\r\n              >\r\n                {this.props.message}\r\n              </Typography>\r\n\r\n              <form onSubmit={this.handleSubmit}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <TextField\r\n                  id=\"password\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={password}\r\n                  onChange={this.handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={() => this.handleClickShowPassword()}\r\n                        >\r\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <p></p>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <p></p>\r\n                <Grid container className=\"justify-content-md-center\">\r\n                  <Grid item xs>\r\n                    <Link to=\"/forgot-password\">Forgot password</Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"/signup\">Don't have an account? Sign Up</Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SignIn;\r\n","const stateHashes = {\r\n    \"AL\": \"Alabama\",\r\n    \"AK\": \"Alaska\",\r\n    \"AS\": \"American Samoa\",\r\n    \"AZ\": \"Arizona\",\r\n    \"AR\": \"Arkansas\",\r\n    \"CA\": \"California\",\r\n    \"CO\": \"Colorado\",\r\n    \"CT\": \"Connecticut\",\r\n    \"DE\": \"Delaware\",\r\n    \"DC\": \"District Of Columbia\",\r\n    \"FM\": \"Federated States Of Micronesia\",\r\n    \"FL\": \"Florida\",\r\n    \"GA\": \"Georgia\",\r\n    \"GU\": \"Guam\",\r\n    \"HI\": \"Hawaii\",\r\n    \"ID\": \"Idaho\",\r\n    \"IL\": \"Illinois\",\r\n    \"IN\": \"Indiana\",\r\n    \"IA\": \"Iowa\",\r\n    \"KS\": \"Kansas\",\r\n    \"KY\": \"Kentucky\",\r\n    \"LA\": \"Louisiana\",\r\n    \"ME\": \"Maine\",\r\n    \"MH\": \"Marshall Islands\",\r\n    \"MD\": \"Maryland\",\r\n    \"MA\": \"Massachusetts\",\r\n    \"MI\": \"Michigan\",\r\n    \"MN\": \"Minnesota\",\r\n    \"MS\": \"Mississippi\",\r\n    \"MO\": \"Missouri\",\r\n    \"MT\": \"Montana\",\r\n    \"NE\": \"Nebraska\",\r\n    \"NV\": \"Nevada\",\r\n    \"NH\": \"New Hampshire\",\r\n    \"NJ\": \"New Jersey\",\r\n    \"NM\": \"New Mexico\",\r\n    \"NY\": \"New York\",\r\n    \"NC\": \"North Carolina\",\r\n    \"ND\": \"North Dakota\",\r\n    \"MP\": \"Northern Mariana Islands\",\r\n    \"OH\": \"Ohio\",\r\n    \"OK\": \"Oklahoma\",\r\n    \"OR\": \"Oregon\",\r\n    \"PW\": \"Palau\",\r\n    \"PA\": \"Pennsylvania\",\r\n    \"PR\": \"Puerto Rico\",\r\n    \"RI\": \"Rhode Island\",\r\n    \"SC\": \"South Carolina\",\r\n    \"SD\": \"South Dakota\",\r\n    \"TN\": \"Tennessee\",\r\n    \"TX\": \"Texas\",\r\n    \"UT\": \"Utah\",\r\n    \"VT\": \"Vermont\",\r\n    \"VI\": \"Virgin Islands\",\r\n    \"VA\": \"Virginia\",\r\n    \"WA\": \"Washington\",\r\n    \"WV\": \"West Virginia\",\r\n    \"WI\": \"Wisconsin\",\r\n    \"WY\": \"Wyoming\"\r\n}\r\n\r\nexport default stateHashes","// material-ui components\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport stateHashes from \"../static/states_hash\";\r\n\r\n//Additional stylesheet\r\nimport \"../App.css\";\r\n\r\n//Logo image\r\nimport Logo from \"../static/Logo.png\";\r\n\r\nimport api from \"../api/api.js\";\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      success: false,\r\n      firstName: this.props.prevFirstName,\r\n      lastName: this.props.prevLastName,\r\n      email: this.props.prevEmail,\r\n      password: \"\",\r\n      state: this.props.prevState,\r\n      showPassword: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'validPassword'\r\n    ValidatorForm.addValidationRule(\"validPassword\", (value) => {\r\n      if (\r\n        value.length < 8 ||\r\n        value.toUpperCase() === value ||\r\n        value.toLowerCase() === value ||\r\n        !/[0-9]/.test(value)\r\n      ) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    // rule \"isState\"\r\n    ValidatorForm.addValidationRule(\"isState\", (value) => {\r\n      if (!Object.keys(stateHashes).includes(value)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove rules when it is not needed\r\n    ValidatorForm.removeValidationRule(\"validPassword\");\r\n    ValidatorForm.removeValidationRule(\"isState\");\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleClickShowPassword() {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      showPassword: !prevState.showPassword,\r\n    }));\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { email, password, firstName, lastName, state } = this.state;\r\n    api\r\n      .post(\"/auth/signup\", {\r\n        email,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n        state,\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.message);\r\n        this.setState({ success: true }, () => {\r\n          this.props.onSuccess();\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.props.onError(\r\n          err.response.data.message,\r\n          email,\r\n          firstName,\r\n          lastName,\r\n          state\r\n        );\r\n      });\r\n  }\r\n\r\n  //render\r\n  render() {\r\n    const {\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      state,\r\n      showPassword,\r\n    } = this.state;\r\n\r\n    if (this.state.success) {\r\n      return <Redirect to=\"/signin\" />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div>\r\n              <img className=\"Logo\" src={Logo} alt=\"just4u logo\" />\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n                style={{\r\n                  display: \"block\",\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Sign Up\r\n              </Typography>\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"body2\"\r\n                color=\"error\"\r\n                id=\"message\"\r\n              >\r\n                {this.props.message}\r\n              </Typography>\r\n              <p></p>\r\n              <ValidatorForm onSubmit={this.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextValidator\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      value={firstName}\r\n                      onChange={this.handleChange}\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"This field is required\"]}\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextValidator\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      value={lastName}\r\n                      onChange={this.handleChange}\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"This field is required\"]}\r\n                      autoComplete=\"lname\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextValidator\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      validators={[\"required\", \"isEmail\"]}\r\n                      errorMessages={[\r\n                        \"This field is required\",\r\n                        \"Invalid email\",\r\n                      ]}\r\n                      value={email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextValidator\r\n                      id=\"password\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      validators={[\"required\", \"validPassword\"]}\r\n                      errorMessages={[\r\n                        \"This field is required\",\r\n                        \"Password must have at least 8 characters, 1 lowercase character, 1 uppercase character, and 1 digit.\",\r\n                      ]}\r\n                      autoComplete=\"current-password\"\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      value={password}\r\n                      onChange={this.handleChange}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={() => this.handleClickShowPassword()}\r\n                            >\r\n                              {showPassword ? (\r\n                                <VisibilityOff />\r\n                              ) : (\r\n                                <Visibility />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextValidator\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      name=\"state\"\r\n                      label=\"State/Territory (two-letter code, e.g. CA, DC, TX)\"\r\n                      id=\"state\"\r\n                      validators={[\"required\", \"isState\"]}\r\n                      errorMessages={[\r\n                        \"This field is required\",\r\n                        \"Invalid state/territory abbreviation. At the moment we only support users from US states and territories.\",\r\n                      ]}\r\n                      value={state}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"state\"\r\n                      inputProps={{\r\n                        maxLength: 2,\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}></Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                <p></p>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link\r\n                      to=\"/signin\"\r\n                      onClick={this.ChangeToSignInPage}\r\n                      variant=\"body2\"\r\n                    >\r\n                      Already have an account? Sign in\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </ValidatorForm>\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport BriefcaseIcon from \"@material-ui/icons/BusinessCenter\";\r\nimport EventIcon from \"@material-ui/icons/EventNote\";\r\nimport TaskIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport CalendarIcon from \"@material-ui/icons/CalendarToday\";\r\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\r\nimport SignoutIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\n// import api\r\nimport api from \"../api/api.js\";\r\n\r\nconst categories = [\r\n  {\r\n    id: \"Your Stuff\",\r\n    children: [\r\n      { id: \"User Profile\", icon: <PersonIcon />, to: \"user\" },\r\n      { id: \"Cases\", icon: <BriefcaseIcon />, to: \"cases\" },\r\n      { id: \"Events\", icon: <EventIcon />, to: \"events\" },\r\n      { id: \"Tasks\", icon: <TaskIcon />, to: \"tasks\" },\r\n      { id: \"Calendar\", icon: <CalendarIcon />, to: \"calendar\" },\r\n      { id: \"Contacts\", icon: <ContactsIcon />, to: \"contacts\" },\r\n    ],\r\n  },\r\n];\r\n\r\nconst styles = (theme) => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"rgba(255, 255, 255, 0.7)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"#4fc3f7\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass Navigator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: \"\"\r\n    };\r\n  }\r\n\r\n  signOut() {\r\n    api\r\n      .get(\"/auth/signout\")\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  changeActive(value) {\r\n    this.setState({ active: value });\r\n  }\r\n\r\n  render() {\r\n    const { classes, ...other } = this.props;\r\n    const { active } = this.state;\r\n    return (\r\n      <Drawer variant=\"permanent\" {...other}>\r\n        <List disablePadding>\r\n          <ListItem\r\n            className={clsx(\r\n              classes.firebase,\r\n              classes.item,\r\n              classes.itemCategory\r\n            )}\r\n          >\r\n            Navigation\r\n          </ListItem>\r\n          <Link to={`/0`} style={{ textDecoration: \"none\" }}>\r\n            <ListItem\r\n              className={clsx(classes.item, classes.itemCategory, active === \"\" && classes.itemActiveItem)}\r\n              button\r\n              onClick={() => this.changeActive(\"\")}\r\n            >\r\n              <ListItemIcon className={classes.itemIcon}>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.itemPrimary,\r\n                }}\r\n              >\r\n                Dashboard\r\n              </ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n          <ListItem className={clsx(classes.item, classes.itemCategory)} button onClick={() => this.signOut()}>\r\n            <ListItemIcon className={classes.itemIcon}>\r\n              <SignoutIcon />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              classes={{\r\n                primary: classes.itemPrimary,\r\n              }}\r\n            >\r\n              Sign Out\r\n            </ListItemText>\r\n          </ListItem>\r\n          {categories.map(({ id, children }) => (\r\n            <React.Fragment key={id}>\r\n              <ListItem className={classes.categoryHeader}>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.categoryHeaderPrimary,\r\n                  }}\r\n                >\r\n                  {id}\r\n                </ListItemText>\r\n              </ListItem>\r\n              {children.map(({ id: childId, icon, to }) => (\r\n                <Link to={`/0/${to}`} style={{ textDecoration: \"none\" }} key={childId}>\r\n                  <ListItem\r\n                    key={childId}\r\n                    button\r\n                    onClick={() => this.changeActive(to)}\r\n                    className={clsx(\r\n                      classes.item,\r\n                      active === to && classes.itemActiveItem\r\n                    )}\r\n                  >\r\n                    <ListItemIcon className={classes.itemIcon}>\r\n                      {icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      classes={{\r\n                        primary: classes.itemPrimary,\r\n                      }}\r\n                    >\r\n                      {childId}\r\n                    </ListItemText>\r\n                  </ListItem>\r\n                </Link>\r\n              ))}\r\n\r\n              <Divider className={classes.divider} />\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    maxWidth: 936,\r\n    margin: 'auto',\r\n    overflow: 'hidden',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  searchInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  addUser: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  contentWrapper: {\r\n    margin: '40px 16px',\r\n  },\r\n});\r\n\r\nfunction Content(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item>\r\n              <SearchIcon className={classes.block} color=\"inherit\" />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Search by email address, phone number, or user UID\"\r\n                InputProps={{\r\n                  disableUnderline: true,\r\n                  className: classes.searchInput,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\r\n                Add user\r\n              </Button>\r\n              <Tooltip title=\"Reload\">\r\n                <IconButton>\r\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.contentWrapper}>\r\n        <Typography color=\"textSecondary\" align=\"center\">\r\n          No users for this project yet\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Content);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PersonIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Link from \"react-router-dom/Link\";\r\n\r\nconst lightColor = \"rgba(255, 255, 255, 0.7)\";\r\n\r\nconst styles = (theme) => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: lightColor,\r\n    \"&:hover\": {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onDrawerToggle}\r\n                  className={classes.menuButton}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Tooltip title=\"User Page\">\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  className={classes.iconButtonAvatar}\r\n                >\r\n                  <Link to=\"/0/user\" style={{ textDecoration: \"none\", color: \"#FFF\" }}>\r\n                    <PersonIcon />\r\n                  </Link>\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                Authentication\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={0} textColor=\"inherit\">\r\n          <Tab textColor=\"inherit\" label=\"Profile\" />\r\n          <Tab textColor=\"inherit\" label=\"Settings\" />\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Navigator from \"./Navigator\";\r\nimport Content from \"./Content\";\r\nimport Header from \"./Header\";\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#63ccff\",\r\n      main: \"#009be5\",\r\n      dark: \"#006db3\",\r\n    },\r\n  },\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: \"#18202c\",\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: \"none\",\r\n      },\r\n      contained: {\r\n        boxShadow: \"none\",\r\n        \"&:active\": {\r\n          boxShadow: \"none\",\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        margin: \"0 16px\",\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up(\"md\")]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: \"#404854\",\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: \"inherit\",\r\n        marginRight: 0,\r\n        \"& svg\": {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: \"flex\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  app: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    padding: theme.spacing(6, 4),\r\n    background: \"#eaeff1\",\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(2),\r\n    background: \"#eaeff1\",\r\n  },\r\n};\r\n\r\nclass Paperbase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mobileOpen: false,\r\n    };\r\n  }\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      mobileOpen: !prevState.mobileOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { mobileOpen } = this.state;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <nav className={classes.drawer}>\r\n            <Hidden smUp implementation=\"js\">\r\n              <Navigator\r\n                PaperProps={{ style: { width: drawerWidth } }}\r\n                variant=\"temporary\"\r\n                open={mobileOpen}\r\n                onClose={() => this.handleDrawerToggle()}\r\n              />\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n            </Hidden>\r\n          </nav>\r\n          <div className={classes.app}>\r\n            <Header onDrawerToggle={() => this.handleDrawerToggle()} />\r\n            <main className={classes.main}>\r\n              <Content />\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nPaperbase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, isAuth, ...rest}) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isAuth ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({component: Component, isAuth, restricted, ...rest}) => {\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            isAuth ?\r\n                <Redirect to=\"/0\" />\r\n            : <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","//material-ui components\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\n//Additional stylesheet\r\nimport \"../App.css\";\r\n\r\n//Logo image\r\nimport Logo from \"../static/Logo.png\";\r\n\r\n// import api\r\nimport api from \"../api/api.js\";\r\n\r\nclass ForgotPassword extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stage: this.props.stage,\r\n      email: this.props.email,\r\n      resetCode: \"\",\r\n      newPassword: \"\",\r\n      showPassword: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'validPassword'\r\n    ValidatorForm.addValidationRule(\"validPassword\", (value) => {\r\n      if (\r\n        value.length < 8 ||\r\n        value.toUpperCase() === value ||\r\n        value.toLowerCase() === value ||\r\n        !/[0-9]/.test(value)\r\n      ) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove rules when it is not needed\r\n    ValidatorForm.removeValidationRule(\"validPassword\");\r\n  }\r\n\r\n  handleClickShowPassword() {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      showPassword: !prevState.showPassword,\r\n    }));\r\n  }\r\n\r\n  handleChange(event) {\r\n    event.preventDefault();\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  resendCode() {\r\n    api\r\n      .post(\"/auth/reset-password\", {\r\n        email: this.state.email,\r\n      })\r\n      .then(() => {\r\n        alert(`New reset code sent to ${this.state.email}`);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        alert(\"An error occurred\");\r\n      });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { stage, email, resetCode, newPassword } = this.state;\r\n    // handle submit for different stages\r\n    switch (stage) {\r\n      case \"email\":\r\n        api\r\n          .post(\"/auth/reset-password\", {\r\n            email,\r\n          })\r\n          .then(() => {\r\n            this.props.onSuccess(\"resetCode\", email);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n            this.props.onError(err.response.data.message);\r\n          });\r\n        break;\r\n      case \"resetCode\":\r\n        api\r\n          .post(\"/auth/confirm-reset-code\", {\r\n            email,\r\n            resetCode,\r\n          })\r\n          .then(() => {\r\n            this.props.onSuccess(\"newPassword\", email);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n            this.props.onError(err.response.data.message);\r\n          });\r\n        break;\r\n      case \"newPassword\":\r\n        api\r\n          .post(\"/auth/new-password\", {\r\n            email,\r\n            newPassword,\r\n          })\r\n          .then(() => {\r\n            alert(\"New password set. Click OK to redirect to Sign In page.\");\r\n            this.props.onSuccess(\"done\", \"\");\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n            this.props.onError(err.response.data.message);\r\n          });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // if done\r\n    const { stage, email, resetCode, newPassword, showPassword } = this.state;\r\n    if (stage === \"done\") {\r\n      return <Redirect to=\"/signin\" />; // redirect to signin\r\n    }\r\n\r\n    let inputField, promptMessage;\r\n    switch (\r\n      stage // conditional rendering for different stages\r\n    ) {\r\n      case \"email\":\r\n        promptMessage = \"Please enter your email\";\r\n        inputField = (\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n          />\r\n        );\r\n        break;\r\n      case \"resetCode\":\r\n        promptMessage = \"Please enter the reset code sent to \" + email;\r\n        inputField = (\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"resetCode\"\r\n            label=\"Reset Code\"\r\n            name=\"resetCode\"\r\n            value={resetCode}\r\n            onChange={this.handleChange}\r\n          />\r\n        );\r\n        break;\r\n      case \"newPassword\":\r\n        promptMessage = \"Please enter your new password\";\r\n        inputField = (\r\n          <TextValidator\r\n            id=\"newPassword\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"newPassword\"\r\n            label=\"New Password\"\r\n            validators={[\"required\", \"validPassword\"]}\r\n            errorMessages={[\r\n              \"This field is required\",\r\n              \"Password must have at least 8 characters, 1 lowercase character, 1 uppercase character, and 1 digit.\",\r\n            ]}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={newPassword}\r\n            onChange={this.handleChange}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={() => this.handleClickShowPassword()}\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div>\r\n              <img className=\"Logo\" src={Logo} alt=\"just4u logo\" />\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n                style={{\r\n                  display: \"block\",\r\n                  margin: \"auto\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Reset Password\r\n              </Typography>\r\n              <p></p>\r\n              <Typography component=\"h2\" variant=\"body1\" id=\"promptMessage\">\r\n                {promptMessage}\r\n              </Typography>\r\n              <p></p>\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"body2\"\r\n                id=\"errorMessage\"\r\n                color=\"error\"\r\n              >\r\n                {this.props.errorMessage}\r\n              </Typography>\r\n              <p></p>\r\n              <ValidatorForm onSubmit={this.handleSubmit}>\r\n                {inputField}\r\n                <p></p>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <p></p>\r\n                <Grid container className=\"justify-content-md-center\">\r\n                  <Grid item xs>\r\n                    {stage === \"resetCode\" ? (\r\n                      <Link to=\"/forgot-password\" onClick={() => this.resendCode()}>Resend code</Link>\r\n                    ) : (\r\n                      <p></p>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"/signin\">Sign In</Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </ValidatorForm>\r\n            </div>\r\n          </Container>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ForgotPassword;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\n//import component\r\nimport Home from \"./components/Home\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Paperbase from \"./components/Paperbase\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport api from \"./api/api\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      isAuthenticated: false,\r\n      messageSignIn: \"\",\r\n      messageSignInColor: \"\",\r\n      errorMessageForgotPassword: \"\",\r\n      stageForgotPassword: \"email\",\r\n      emailForgotPassword: \"\",\r\n      signUpError: {\r\n        message: \"\",\r\n        prevEmail: \"\",\r\n        prevFirstName: \"\",\r\n        prevLastName: \"\",\r\n        prevState: \"\",\r\n      },\r\n    };\r\n    this.successSignIn = this.successSignIn.bind(this);\r\n    this.errorSignIn = this.errorSignIn.bind(this);\r\n    this.successSignUp = this.successSignUp.bind(this);\r\n    this.errorSignUp = this.errorSignUp.bind(this);\r\n    this.errorForgotPassword = this.errorForgotPassword.bind(this);\r\n    this.successStageForgotPassword = this.successStageForgotPassword.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // handling authentication and verified status upon mounting\r\n    api\r\n      .get(\"/auth\") // get server info\r\n      .then((response) => {\r\n        // if user is verified\r\n        if (response.data.isVerified) {\r\n          this.setState({ isAuthenticated: true }, () => {\r\n            this.setState({ loading: false });\r\n          });\r\n        } else if (!response.data.isAuthenticated) {\r\n          // if user is not signed in\r\n          this.setState({ isAuthenticated: false }, () => {\r\n            this.setState({ loading: false });\r\n          });\r\n        } else if (response.data.isAuthenticated && !response.data.isVerified) {\r\n          // signed in but unverified\r\n          api\r\n            .get(\"/auth/signout\") // auto sign out user if not verified\r\n            .then((response) => {\r\n              this.setState({ isAuthenticated: false }, () => {\r\n                this.setState({ loading: false });\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              console.error(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  successSignIn() {\r\n    this.setState({\r\n      isAuthenticated: true,\r\n      isVerified: true,\r\n      messageSignIn: \"\",\r\n      messageSignInColor: \"\",\r\n    });\r\n  }\r\n\r\n  errorSignIn(message) {\r\n    this.setState({ messageSignIn: message, messageSignInColor: \"red\" });\r\n  }\r\n\r\n  successSignUp() {\r\n    this.setState({\r\n      messageSignIn: \"Signup successful. Please sign in and verify user.\",\r\n      messageSignInColor: \"green\",\r\n      signUpError: {\r\n        message: \"\",\r\n        prevEmail: \"\",\r\n        prevFirstName: \"\",\r\n        prevLastName: \"\",\r\n        prevState: \"\",\r\n      },\r\n    });\r\n  }\r\n\r\n  errorSignUp(message, prevEmail, prevFirstName, prevLastName, prevState) {\r\n    this.setState({\r\n      signUpError: {\r\n        message,\r\n        prevEmail,\r\n        prevFirstName,\r\n        prevLastName,\r\n        prevState,\r\n      },\r\n    });\r\n  }\r\n\r\n  errorForgotPassword(message) {\r\n    this.setState({ errorMessageForgotPassword: message });\r\n  }\r\n\r\n  successStageForgotPassword(nextStage, email) {\r\n    this.setState({\r\n      errorMessageForgotPassword: \"\",\r\n      stageForgotPassword: nextStage,\r\n      emailForgotPassword: email,\r\n    });\r\n  }\r\n\r\n  // Render app page\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h1>Loading...</h1>;\r\n    }\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Switch>\r\n            <PublicRoute\r\n              isAuth={this.state.isAuthenticated}\r\n              component={Home}\r\n              path=\"/\"\r\n              exact\r\n            />\r\n            <PublicRoute\r\n              isAuth={this.state.isAuthenticated}\r\n              component={(props) => (\r\n                <ForgotPassword\r\n                  {...props}\r\n                  stage={this.state.stageForgotPassword}\r\n                  email={this.state.emailForgotPassword}\r\n                  onSuccess={this.successStageForgotPassword}\r\n                  onError={this.errorForgotPassword}\r\n                  errorMessage={this.state.errorMessageForgotPassword}\r\n                />\r\n              )}\r\n              path=\"/forgot-password\"\r\n              exact\r\n            />\r\n            <PublicRoute\r\n              isAuth={this.state.isAuthenticated}\r\n              component={(props) => (\r\n                <SignIn\r\n                  {...props}\r\n                  onSuccess={this.successSignIn}\r\n                  onError={this.errorSignIn}\r\n                  message={this.state.messageSignIn}\r\n                  messageColor={this.state.messageSignInColor}\r\n                />\r\n              )}\r\n              path=\"/signin\"\r\n              exact\r\n            />\r\n            <PublicRoute\r\n              isAuth={this.state.isAuthenticated}\r\n              component={(props) => (\r\n                <SignUp\r\n                  {...props}\r\n                  onSuccess={this.successSignUp}\r\n                  onError={this.errorSignUp}\r\n                  message={this.state.signUpError.message}\r\n                  prevEmail={this.state.signUpError.prevEmail}\r\n                  prevFirstName={this.state.signUpError.prevFirstName}\r\n                  prevLastName={this.state.signUpError.prevLastName}\r\n                  prevState={this.state.signUpError.prevState}\r\n                />\r\n              )}\r\n              path=\"/signup\"\r\n              exact\r\n            />\r\n            <PrivateRoute\r\n              component={Paperbase}\r\n              isAuth={this.state.isAuthenticated}\r\n              path=\"/0\"\r\n            />\r\n            <Route>\r\n              <h1>404 Not Found</h1>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","module.exports = __webpack_public_path__ + \"static/media/Logo.4993ea66.png\";"],"sourceRoot":""}